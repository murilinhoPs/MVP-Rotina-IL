{"version":3,"sources":["components/dropImages/avatarPlaceholder/mobile.js","components/dropImages/avatarPlaceholder/index.js","components/dropImages/dropzone/mobile-desktop/mobile.js","components/dropImages/dropzone/index.js","components/todoList/index.js","components/todoComponent/index.js","pages/todoDaily/index.js","pages/weeklyTodo/index.js","pages/App/index.js","serviceWorker.js","index.js"],"names":["AvatarContent","iconSize","maxNumber","multiple","maxFileSize","acceptType","imageList","onImageUpload","onImageRemoveAll","style","alignSelf","length","className","onClick","onTouchStart","size","map","image","key","src","dataURL","onRemove","Dropzone","useState","isMobile","setIsMobile","useEffect","verifyWidth","window","outerWidth","console","log","addEventListener","DropzoneMobile","height","width","ListItems","props","items","setValue","listItems","item","type","id","value","text","onChange","inputEvent","setUpdate","target","rows","deleteItem","icon","duration","easing","library","add","faTrash","TodoComponent","setItems","currentItem","setCurrentItem","onSubmit","preventDefault","newItem","newItems","placeholder","Date","now","cols","filteredItems","filter","TodoDaily","day","WeeklyTodo","App","print","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1964994e.chunk.js","sourcesContent":["import React from \"react\";\nimport ImageUploading from \"react-images-uploading\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport \"./styles.css\";\n\nconst maxFiles = 1;\nconst maxMbFileSize = 5 * 1024 * 1024;\n\nconst AvatarContent = ({ iconSize }) => {\n  return (\n    <ImageUploading\n      maxNumber={maxFiles}\n      multiple={false}\n      maxFileSize={maxMbFileSize}\n      acceptType={[\"jpg\", \"gif\", \"png\"]}\n    >\n      {({ imageList, onImageUpload, onImageRemoveAll }) => (\n        <div style={{ alignSelf: \"center\" }}>\n          {imageList.length == 0 ? (\n            <div\n              className=\"DropContainerAvatar\"\n              onClick={onImageUpload}\n              onTouchStart={onImageUpload}\n            >\n              <FaUserCircle className=\"IconAvatar\" size={iconSize} />\n              <text>+</text>\n            </div>\n          ) : (\n            imageList.map((image) => (\n              <div className=\"AvatarImageContainer\" key={image.key}>\n                <img src={image.dataURL} />\n                <div>\n                  <AiFillCloseCircle\n                    className=\"AvatarRemoveIcon\"\n                    onClick={image.onRemove}\n                    onTouchStart={image.onRemove}\n                    size=\"26px\"\n                  />\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </ImageUploading>\n  );\n};\n\nexport default AvatarContent;\n","import React, { useState, useEffect } from \"react\";\nimport AvatarContent from \"./mobile\";\n\nconst Dropzone = ({ iconSize }) => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const verifyWidth = () => {\n      setIsMobile(window.outerWidth <= 768);\n\n      console.log(isMobile);\n    };\n\n    window.addEventListener(\"resize\", verifyWidth);\n\n    verifyWidth();\n  });\n\n  return (\n    <>\n      {/* {isMobile ? (\n        <DropzoneMobile iconSize={iconSize} />\n      ) : (\n        <DropzoneDesktop iconSize={iconSize} />\n      )} */}\n      <AvatarContent iconSize={iconSize} />\n    </>\n  );\n};\n\nexport default Dropzone;\n","import React from \"react\";\nimport { FaFileImage } from \"react-icons/fa\";\nimport ImageUploading from \"react-images-uploading\";\n\nimport \"../styles.css\";\n\nconst maxFiles = 1;\nconst maxMbFileSize = 5 * 1024 * 1024;\n\nconst DropzoneMobile = ({ iconSize }) => {\n  return (\n    <ImageUploading\n      maxNumber={maxFiles}\n      multiple={false}\n      maxFileSize={maxMbFileSize}\n      acceptType={[\"jpg\", \"gif\", \"png\"]}\n    >\n      {({ imageList, onImageUpload, onImageRemoveAll }) => (\n        <div style={{ alignSelf: \"center\" }}>\n          {imageList.length == 0 ? (\n            <div\n              className=\"DropContainer\"\n              onClick={onImageUpload}\n              onTouchStart={onImageUpload}\n            >\n              <FaFileImage className=\"Icon\" size={iconSize} />\n              <text>+</text>\n            </div>\n          ) : (\n            imageList.map((image) => (\n              <div className=\"DropzoneImageContainer\" key={image.key}>\n                <img height=\"100%\" width=\"100%\" src={image.dataURL} />\n                <button onClick={image.onRemove} onTouchStart={image.onRemove}>\n                  Remover imagem\n                </button>\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </ImageUploading>\n  );\n};\n\nexport default DropzoneMobile;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport DropzoneDesktop from \"./mobile-desktop/desktop\";\nimport DropzoneMobile from \"./mobile-desktop/mobile\";\n\nconst Dropzone = ({ iconSize }) => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const verifyWidth = () => {\n      setIsMobile(window.outerWidth <= 768);\n\n      console.log(isMobile);\n    };\n\n    window.addEventListener(\"resize\", verifyWidth);\n\n    verifyWidth();\n  });\n\n  return (\n    <>\n      {/* {isMobile ? (\n        <DropzoneMobile iconSize={iconSize} />\n      ) : (\n        <DropzoneDesktop iconSize={iconSize} />\n      )} */}\n      <DropzoneMobile iconSize={iconSize} />\n    </>\n  );\n};\n\nexport default Dropzone;\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport AvatarPlaceholder from \"../dropImages/avatarPlaceholder/index\";\r\nimport Dropzone from \"../dropImages/dropzone/index\";\r\nimport { FaFileImage, FaRegFileImage, FaFileUpload } from \"react-icons/fa\";\r\n\r\nconst ListItems = (props) => {\r\n  const items = props.items;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className=\"list\" key={item.key}>\r\n        <p>\r\n          <div className=\"MyDisplay\">\r\n            <AvatarPlaceholder iconSize=\"30px\" />\r\n\r\n            <div className=\"TextArea\">\r\n              <textarea\r\n                type=\"text\"\r\n                id={item.key}\r\n                value={item.text}\r\n                multiple={true}\r\n                onChange={(inputEvent) => {\r\n                  props.setUpdate(inputEvent.target.value, item.key);\r\n                  setValue(inputEvent.target.value);\r\n                  console.log(inputEvent.target.value);\r\n                }}\r\n                rows={3}\r\n              />\r\n            </div>\r\n            <span>\r\n              <FontAwesomeIcon\r\n                className=\"faicons\"\r\n                onClick={() => {\r\n                  props.deleteItem(item.key);\r\n                }}\r\n                icon=\"trash\"\r\n              />\r\n            </span>\r\n          </div>\r\n          <Dropzone iconSize=\"35px\" />\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItems;\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport ListItems from \"../todoList\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash);\n\nconst TodoComponent = () => {\n  const [items, setItems] = useState([]);\n\n  const [currentItem, setCurrentItem] = useState({\n    text: \"\",\n    key: \"\",\n  });\n\n  function addItem(inputEvent) {\n    inputEvent.preventDefault();\n\n    const newItem = currentItem;\n\n    if (newItem.text !== \"\") {\n      const newItems = [...items, newItem];\n\n      setItems(newItems);\n\n      setCurrentItem({\n        text: \"\",\n        key: \"\",\n      });\n    }\n  }\n\n  function handleInput(inputEvent) {\n    setCurrentItem({\n      text: inputEvent.target.value,\n      key: Date.now(),\n    });\n  }\n\n  function deleteItem(key) {\n    const filteredItems = items.filter((item) => item.key !== key);\n\n    setItems(filteredItems);\n  }\n\n  function setUpdate(text, key) {\n    console.log(\"items:\" + items);\n    const newItems = items;\n\n    newItems.map((item) => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key);\n\n        item.text = text;\n\n        console.log(item.text);\n\n        setItems(newItems);\n      }\n    });\n\n    setItems(newItems);\n  }\n\n  return (\n    <div className=\"TodoContainer\">\n      <header>\n        <form id=\"to-do-form\" onSubmit={addItem}>\n          <textarea\n            type=\"textarea\"\n            placeholder=\"Tarefa\"\n            value={currentItem.text}\n            onChange={handleInput}\n            rows={5}\n            cols={3}\n          />\n          <button type=\"submit\">+</button>\n        </form>\n      </header>\n\n      <ListItems items={items} deleteItem={deleteItem} setUpdate={setUpdate} />\n    </div>\n  );\n};\n\nexport default TodoComponent;\n","import React from \"react\";\nimport \"./styles.css\";\nimport TodoComponent from \"../../components/todoComponent/index\";\n\nexport const TodoDaily = ({ day }) => {\n\n  return (\n    <div className=\"DayContainer\">\n      <header className=\"DayName\">{day}</header>\n      <div className=\"DayTodo\">\n        <TodoComponent />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./styles.css\";\nimport { TodoDaily } from \"../todoDaily/\";\n\nconst WeeklyTodo = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const verifyWidth = () => {\n      setIsMobile(window.outerWidth <= 768);\n\n      console.log(isMobile);\n    };\n\n    window.addEventListener(\"resize\", verifyWidth);\n\n    verifyWidth();\n  });\n\n  return (\n    <span>\n      <div className=\"container\">\n        <TodoDaily day=\"Segunda\" />\n        <TodoDaily day=\"Terça\" />\n        <TodoDaily day=\"Quarta\" />\n        <TodoDaily day=\"Quinta\" />\n        <TodoDaily day=\"Sexta\" />\n        <TodoDaily day=\"Sábado\" />\n        <TodoDaily day=\"Domingo\" />\n      </div>\n    </span>\n  );\n};\n\nexport default WeeklyTodo;\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport WeeklyTodo from \"../weeklyTodo\";\nconst App = () => {\n\n  return (\n    <>\n      <button className=\"PrintButton\" onClick={() => window.print()}>\n        Imprimir\n      </button>\n        <WeeklyTodo />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './pages/App';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}